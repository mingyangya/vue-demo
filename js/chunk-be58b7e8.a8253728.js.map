{"version":3,"sources":["webpack:///./src/views/map-3d/index.vue?15fe","webpack:///./src/views/map-3d/index.vue","webpack:///src/views/map-3d/index.vue","webpack:///./src/views/map-3d/index.vue?02bf","webpack:///./src/views/map-3d/index.vue?3322"],"names":["render","_vm","this","_c","_self","staticClass","ref","staticRenderFns","data","option","seriesData","name","fydm","mounted","initEchart","methods","handleData","mapFeatures","echarts","geoJson","features","geoCoordMap","forEach","v","properties","center","mapData","myEchart","$refs","refEchart","setOption","window","addEventListener","resize","on","params","console","log","setTimeout","dispatchAction","type","seriesIndex","dataIndex","_main","_geo3D","viewControl","distance","beta","alpha","panMouseButton","rotateMouseButton","backgroundColor","geo3D","map","roam","regionHeight","top","zlevel","itemStyle","show","color","borderWidth","borderColor","shading","label","regions","opacity","emphasis","_defineProperty","detailTexture","textureTiling","roughness","metalness","roughnessAdjust","main","intensity","shadowQuality","shadow","ambient","tooltip","series","item","_objectSpread","value","coordinateSystem","geo3DIndex","component"],"mappings":"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","file":"js/chunk-be58b7e8.a8253728.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--9-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=7b8e10ef&prod&scoped=true&lang=scss&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"map-3d\"},[_c('div',{ref:\"refEchart\",staticClass:\"chart w-full h-full\"})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"map-3d\">\n    <div ref=\"refEchart\" class=\"chart w-full h-full\"></div>\n  </div>\n</template>\n\n<script>\nimport mapData from './map.json'\n\nimport * as echarts from 'echarts';\nimport 'echarts-gl';\n\nexport default {\n  data() {\n    return {\n      option: [],\n      seriesData: [\n        { name: \"罗湖区\", fydm: \"2578\", },// 2578  深圳市中院2577\n        { name: \"福田区\", fydm: \"2579\", },// 2579\n        { name: \"南山区\", fydm: \"2580\", },// 2580\n        { name: \"前海区\", fydm: \"2714\", },// 2714\n        { name: \"宝安区\", fydm: \"2581\", },// 2581\n        { name: \"龙华区\", fydm: \"5006\", },// 5006\n        { name: \"光明区\", fydm: \"5033\", }, // 5033\n        { name: \"盐田区\", fydm: \"2583\", }, // 2583\n        { name: \"龙岗区\", fydm: \"2582\", }, // 2582\n        { name: \"大鹏区\", fydm: \"2582\", }, // 2582\n        { name: \"坪山区\", fydm: \"5007\" }, // 5007\n        { name: \"深汕区\", fydm: \"5034\" } // 5034\n      ],\n    }\n  },\n  mounted() {\n    this.initEchart()\n  },\n  methods: {\n\n    handleData() {\n      const mapFeatures = echarts.getMap(\"centerMap\").geoJson.features;\n      var geoCoordMap = {};\n      mapFeatures.forEach(function (v) {\n        // 地区名称\n        var name = v.properties.name;\n        // 地区经纬度\n        geoCoordMap[name] = v.properties.center;\n\n        return geoCoordMap\n      });\n\n      var convertData = function (data) {\n        var res = [];\n        for (var i = 0; i < data.length; i++) {\n          var geoCoord = geoCoordMap[data[i].name];\n          if (geoCoord) {\n            res.push({\n              name: data[i].name,\n              value: geoCoord.concat(data[i].value)\n            });\n          }\n        }\n        return res;\n      };\n    },\n    initEchart() {\n      echarts.registerMap('shenzhen', mapData)\n      const myEchart = echarts.init(this.$refs.refEchart)\n\n      this.setOption()\n      myEchart.setOption(this.option)\n\n      window.addEventListener(\"resize\", () => {\n        myEchart.resize();\n      })\n\n      //  监听\n      myEchart.on(\"mouseover\", params => {\n        console.log(1, params);\n      })\n\n      setTimeout(() => {\n        myEchart.dispatchAction({\n          type: 'showTip',\n          seriesIndex: 1, // 假设这是你的系列索引  \n          dataIndex: 0 // 数据项的索引  \n        });\n\n        // myEchart.dispatchAction({\n        //   type: 'highlight',\n        //   seriesIndex: 0,\n        //   dataIndex: 10\n        // });\n\n        // myEchart.dispatchAction({\n        //   type: 'toggleSelect',\n\n        //   // 用 index 或 id 或 name 来指定系列。\n        //   // 可以使用数组指定多个系列。\n        //   seriesIndex: 0,\n        //   dataIndex: 0,\n        // })\n      })\n\n      // dispatchAction\n    },\n\n    setOption() {\n      const viewControl = {\n        distance: 100, // 地图视角 控制初始大小\n        // rotateSensitivity: 0, // 旋转\n        // zoomSensitivity: 0, // 缩放\n        // autoRotate: false,\n        // maxBeta: Infinity,\n        // minBeta: -Infinity,\n        beta: 15, // 旋转视角\n        alpha: 45, // 视角\n        panMouseButton: 'left',\n        rotateMouseButton: 'right',\n        // center: [5, -10, 0],\n      }\n\n      // const regions = this.seriesData.map(item => ({ name: item.name }))\n\n      const option = {\n        backgroundColor: 'rgba(0,0,0,1)',\n        geo3D: {\n          type: 'map',\n          map: 'shenzhen',\n          roam: 'true',\n          regionHeight: 6, // 地图厚度\n          top: '5%',\n          zlevel: 1,\n          itemStyle: {\n            show: true,\n            color: 'rgb(8,32,53)',\n            borderWidth: 2, // 分界线宽度\n            // borderColor: '#409EFF', // 分界线颜色\n            borderColor: '#fff', // 分界线颜色\n          },\n          // 通过经典的 lambert 着色表现光照带来的明暗\n          shading: 'lambert',\n          label: {\n            show: true\n          },\n          // 默认高亮区域\n          regions: [\n            {\n              name: '福田区',\n              itemStyle: {\n                // hover之后的颜色\n                color: '#1341BE',\n                opacity: 0.9, // 透明度\n                borderWidth: 1, //分界线宽度\n                borderColor: '#00EBFF', //分界线颜色\n              },\n            },\n          ],\n          // hover高亮颜色\n          emphasis: {\n            label: {\n              show: true,\n            },\n            itemStyle: {\n              // hover之后的颜色\n              color: '#1341BE',\n              opacity: 0.9, // 透明度\n              borderWidth: 1, //分界线宽度\n              borderColor: '#00EBFF', //分界线颜色\n            },\n          },\n          shading: 'realistic',\n          // 真实感材质相关配置 shading: 'realistic'时有效\n          realisticMaterial: {\n            detailTexture: 'https://cdn.polyhaven.com/asset_img/primary/painted_concrete.png?height=780', // 纹理贴图\n            textureTiling: 1, // 纹理平铺，1是拉伸，数字表示纹理平铺次数\n            roughness: 1, // 材质粗糙度，0完全光滑，1完全粗糙\n            metalness: 0, // 0材质是非金属 ，1金属\n            roughnessAdjust: 0\n          },\n          // shading 为color 时无效\n          light: {\n            //光照阴影\n            main: {\n              color: \"#fff\", // 光照颜色\n              intensity: 5, // 光照强度\n              shadowQuality: 'high', //阴影亮度\n              shadow: false, //是否显示阴影\n              shadowQuality: \"medium\", //阴影质量 ultra //阴影亮度\n              alpha: 55,\n              beta: 10\n            },\n            ambient: {\n              intensity: 0.7\n            }\n          },\n          viewControl: viewControl,\n        },\n        tooltip: {\n          show: true\n        },\n        series: [\n          {\n            name: 'map',\n            // type: \"map\",\n            type: \"map3D\",\n            map: \"shenzhen\",\n            regionHeight: 0,\n            zlevel: 2,\n            data: this.seriesData.map(item => {\n              return {\n                ...item,\n                value: item.name + '-1'\n              }\n            }),\n\n            itemStyle: {\n              show: true,\n              color: 'rgb(8,32,53)',\n              borderWidth: 2, // 分界线宽度\n              // borderColor: '#409EFF', // 分界线颜色\n              borderColor: '#fff', // 分界线颜色\n            },\n            tooltip: {\n              show: true\n            },\n          },\n          {\n            type: \"scatter3D\",\n            coordinateSystem: \"geo3D\",\n            geo3DIndex: 0,\n            zlevel: 6,\n          }\n\n        ]\n      }\n\n      this.option = option\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.map-3d {\n  width: 100%;\n  height: 100vh;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7b8e10ef&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=7b8e10ef&prod&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7b8e10ef\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}